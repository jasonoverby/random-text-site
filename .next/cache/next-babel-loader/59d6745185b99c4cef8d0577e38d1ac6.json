{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/jasonoverby/p/random-text-site/pages/index.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport getRandomPhrase from '../random-text/src/get-random-text';\nimport { getRandomWords, getRandomNumber } from '../random-text/src/utils';\nimport * as STOCK_PHRASES from '../random-text/text/phrases.json';\nvar NUMBER_OF_PHRASES = 3;\nvar STARTER_PHRASE = 'get random text';\n\nvar getRandomPhrases =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(randomWords) {\n    var phrases, i, phrase;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            phrases = [];\n            i = 0;\n\n          case 2:\n            if (!(i < NUMBER_OF_PHRASES)) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.prev = 3;\n            _context.next = 6;\n            return getRandomPhrase(randomWords);\n\n          case 6:\n            phrase = _context.sent;\n            phrases.push(phrase);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0);\n\n          case 13:\n            i += 1;\n            _context.next = 2;\n            break;\n\n          case 16:\n            return _context.abrupt(\"return\", phrases);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 10]]);\n  }));\n\n  return function getRandomPhrases(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getRandomPhrasesDebounced = AwesomeDebouncePromise(getRandomPhrases, 500);\n\nvar getPhrase = function getPhrase(phrases, phrase) {\n  if (phrase !== phrases[0]) return phrases[0];\n  var randomIndex = getRandomNumber(0, STOCK_PHRASES.length - 1);\n  return STOCK_PHRASES[randomIndex];\n};\n\nvar RandomText = function RandomText(_ref2) {\n  var randomWords = _ref2.randomWords;\n\n  var _useState = useState([STARTER_PHRASE]),\n      phrases = _useState[0],\n      setPhrases = _useState[1];\n\n  var _useState2 = useState(STARTER_PHRASE),\n      phrase = _useState2[0],\n      setPhrase = _useState2[1];\n\n  var handleClick = function handleClick() {\n    console.log('phrases', phrases);\n    var newPhrase = getPhrase(phrases, phrase);\n    setPhrase(newPhrase);\n    var newPhrases = phrases && phrases.slice(1) || [];\n\n    if (newPhrases.length <= 1) {\n      getRandomPhrasesDebounced(randomWords).then(function (randomPhrases) {\n        setPhrases(newPhrases.concat(randomPhrases));\n      });\n    } else {\n      newPhrases = phrases.slice(1);\n      setPhrases(newPhrases);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-1924471468\" + \" \" + \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    onClick: handleClick,\n    className: \"jsx-1924471468\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, phrase), __jsx(_JSXStyle, {\n    id: \"1924471468\",\n    __self: this\n  }, \"@import url('https://fonts.googleapis.com/css?family=Fira+Code&display=swap');body{background:#000;}.container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;height:100vh;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}h1{color:rgb(255,235,238);cursor:pointer;font:32px 'fira code',menlo,helvetica,arial,sans-serif;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXNvbm92ZXJieS9wL3JhbmRvbS10ZXh0LXNpdGUvcGFnZXMvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1EUyxBQUV3RixBQUUzRCxBQUlILEFBT1ksZ0JBVjNCLE9BV2lCLGVBQzRDLG9DQVI5QyxhQUNVLE1BUXpCLDZGQVBxQiw2RkFDckIiLCJmaWxlIjoiL1VzZXJzL2phc29ub3ZlcmJ5L3AvcmFuZG9tLXRleHQtc2l0ZS9wYWdlcy9pbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBBd2Vzb21lRGVib3VuY2VQcm9taXNlIGZyb20gJ2F3ZXNvbWUtZGVib3VuY2UtcHJvbWlzZSc7XG5pbXBvcnQgZ2V0UmFuZG9tUGhyYXNlIGZyb20gJy4uL3JhbmRvbS10ZXh0L3NyYy9nZXQtcmFuZG9tLXRleHQnO1xuaW1wb3J0IHsgZ2V0UmFuZG9tV29yZHMsIGdldFJhbmRvbU51bWJlciB9IGZyb20gJy4uL3JhbmRvbS10ZXh0L3NyYy91dGlscyc7XG5pbXBvcnQgKiBhcyBTVE9DS19QSFJBU0VTIGZyb20gJy4uL3JhbmRvbS10ZXh0L3RleHQvcGhyYXNlcy5qc29uJztcblxuY29uc3QgTlVNQkVSX09GX1BIUkFTRVMgPSAzO1xuY29uc3QgU1RBUlRFUl9QSFJBU0UgPSAnZ2V0IHJhbmRvbSB0ZXh0JztcblxuY29uc3QgZ2V0UmFuZG9tUGhyYXNlcyA9IGFzeW5jIChyYW5kb21Xb3Jkczogc3RyaW5nW10pID0+IHtcbiAgY29uc3QgcGhyYXNlcyA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IE5VTUJFUl9PRl9QSFJBU0VTOyBpICs9IDEpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcGhyYXNlID0gYXdhaXQgZ2V0UmFuZG9tUGhyYXNlKHJhbmRvbVdvcmRzKTtcbiAgICAgIHBocmFzZXMucHVzaChwaHJhc2UpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHBocmFzZXM7XG59O1xuY29uc3QgZ2V0UmFuZG9tUGhyYXNlc0RlYm91bmNlZCA9IEF3ZXNvbWVEZWJvdW5jZVByb21pc2UoZ2V0UmFuZG9tUGhyYXNlcywgNTAwKTtcbmNvbnN0IGdldFBocmFzZSA9IChwaHJhc2VzOiBzdHJpbmdbXSwgcGhyYXNlOiBzdHJpbmcpID0+IHtcbiAgaWYgKHBocmFzZSAhPT0gcGhyYXNlc1swXSkgcmV0dXJuIHBocmFzZXNbMF07XG4gIGNvbnN0IHJhbmRvbUluZGV4ID0gZ2V0UmFuZG9tTnVtYmVyKDAsIFNUT0NLX1BIUkFTRVMubGVuZ3RoIC0gMSk7XG4gIHJldHVybiBTVE9DS19QSFJBU0VTW3JhbmRvbUluZGV4XTtcbn07XG5cbmNvbnN0IFJhbmRvbVRleHQgPSAoeyByYW5kb21Xb3JkcyB9OiB7IHJhbmRvbVdvcmRzOiBzdHJpbmdbXSB9KSA9PiB7XG4gIGNvbnN0IFtwaHJhc2VzLCBzZXRQaHJhc2VzXSA9IHVzZVN0YXRlKFtTVEFSVEVSX1BIUkFTRV0pO1xuICBjb25zdCBbcGhyYXNlLCBzZXRQaHJhc2VdID0gdXNlU3RhdGUoU1RBUlRFUl9QSFJBU0UpO1xuXG4gIGNvbnN0IGhhbmRsZUNsaWNrID0gKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdwaHJhc2VzJywgcGhyYXNlcyk7XG4gICAgY29uc3QgbmV3UGhyYXNlID0gZ2V0UGhyYXNlKHBocmFzZXMsIHBocmFzZSk7XG4gICAgc2V0UGhyYXNlKG5ld1BocmFzZSk7XG4gICAgbGV0IG5ld1BocmFzZXMgPSAocGhyYXNlcyAmJiBwaHJhc2VzLnNsaWNlKDEpKSB8fCBbXTtcbiAgICBpZiAobmV3UGhyYXNlcy5sZW5ndGggPD0gMSkge1xuICAgICAgZ2V0UmFuZG9tUGhyYXNlc0RlYm91bmNlZChyYW5kb21Xb3JkcykudGhlbigocmFuZG9tUGhyYXNlcykgPT4ge1xuICAgICAgICBzZXRQaHJhc2VzKG5ld1BocmFzZXMuY29uY2F0KHJhbmRvbVBocmFzZXMpKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBuZXdQaHJhc2VzID0gcGhyYXNlcy5zbGljZSgxKTtcbiAgICAgIHNldFBocmFzZXMobmV3UGhyYXNlcyk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cbiAgICAgIDxoMSBvbkNsaWNrPXtoYW5kbGVDbGlja30+e3BocmFzZX08L2gxPlxuICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+XG4gICAgICAgIHtgXG4gICAgICAgICAgQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1GaXJhK0NvZGUmZGlzcGxheT1zd2FwJyk7XG4gICAgICAgICAgYm9keSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMDAwO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC5jb250YWluZXIge1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGhlaWdodDogMTAwdmg7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaDEge1xuICAgICAgICAgICAgY29sb3I6IHJnYigyNTUsIDIzNSwgMjM4KTtcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgIGZvbnQ6IDMycHggJ2ZpcmEgY29kZScsIG1lbmxvLCBoZWx2ZXRpY2EsIGFyaWFsLCBzYW5zLXNlcmlmO1xuICAgICAgICAgIH1cbiAgICAgICAgYH1cbiAgICAgIDwvc3R5bGU+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5jb25zdCBnZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IHJhbmRvbVdvcmRzID0gYXdhaXQgZ2V0UmFuZG9tV29yZHMoKTtcbiAgcmV0dXJuIHsgcmFuZG9tV29yZHMgfTtcbn07XG5SYW5kb21UZXh0LmdldEluaXRpYWxQcm9wcyA9IGdldEluaXRpYWxQcm9wcztcblxuZXhwb3J0IGRlZmF1bHQgUmFuZG9tVGV4dDtcbiJdfQ== */\\n/*@ sourceURL=/Users/jasonoverby/p/random-text-site/pages/index.tsx */\"));\n};\n\nvar getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var randomWords;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return getRandomWords();\n\n          case 2:\n            randomWords = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              randomWords: randomWords\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getInitialProps() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nRandomText.getInitialProps = getInitialProps;\nexport default RandomText;","map":{"version":3,"sources":["/Users/jasonoverby/p/random-text-site/pages/index.tsx"],"names":["useState","AwesomeDebouncePromise","getRandomPhrase","getRandomWords","getRandomNumber","STOCK_PHRASES","NUMBER_OF_PHRASES","STARTER_PHRASE","getRandomPhrases","randomWords","phrases","i","phrase","push","console","log","getRandomPhrasesDebounced","getPhrase","randomIndex","length","RandomText","setPhrases","setPhrase","handleClick","newPhrase","newPhrases","slice","then","randomPhrases","concat","getInitialProps"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport getRandomPhrase from '../random-text/src/get-random-text';\nimport { getRandomWords, getRandomNumber } from '../random-text/src/utils';\nimport * as STOCK_PHRASES from '../random-text/text/phrases.json';\n\nconst NUMBER_OF_PHRASES = 3;\nconst STARTER_PHRASE = 'get random text';\n\nconst getRandomPhrases = async (randomWords: string[]) => {\n  const phrases = [];\n  for (let i = 0; i < NUMBER_OF_PHRASES; i += 1) {\n    try {\n      const phrase = await getRandomPhrase(randomWords);\n      phrases.push(phrase);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  return phrases;\n};\nconst getRandomPhrasesDebounced = AwesomeDebouncePromise(getRandomPhrases, 500);\nconst getPhrase = (phrases: string[], phrase: string) => {\n  if (phrase !== phrases[0]) return phrases[0];\n  const randomIndex = getRandomNumber(0, STOCK_PHRASES.length - 1);\n  return STOCK_PHRASES[randomIndex];\n};\n\nconst RandomText = ({ randomWords }: { randomWords: string[] }) => {\n  const [phrases, setPhrases] = useState([STARTER_PHRASE]);\n  const [phrase, setPhrase] = useState(STARTER_PHRASE);\n\n  const handleClick = () => {\n    console.log('phrases', phrases);\n    const newPhrase = getPhrase(phrases, phrase);\n    setPhrase(newPhrase);\n    let newPhrases = (phrases && phrases.slice(1)) || [];\n    if (newPhrases.length <= 1) {\n      getRandomPhrasesDebounced(randomWords).then((randomPhrases) => {\n        setPhrases(newPhrases.concat(randomPhrases));\n      });\n    } else {\n      newPhrases = phrases.slice(1);\n      setPhrases(newPhrases);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 onClick={handleClick}>{phrase}</h1>\n      <style jsx global>\n        {`\n          @import url('https://fonts.googleapis.com/css?family=Fira+Code&display=swap');\n          body {\n            background: #000;\n          }\n\n          .container {\n            display: flex;\n            height: 100vh;\n            justify-content: center;\n            align-items: center;\n          }\n\n          h1 {\n            color: rgb(255, 235, 238);\n            cursor: pointer;\n            font: 32px 'fira code', menlo, helvetica, arial, sans-serif;\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nconst getInitialProps = async () => {\n  const randomWords = await getRandomWords();\n  return { randomWords };\n};\nRandomText.getInitialProps = getInitialProps;\n\nexport default RandomText;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/jasonoverby/p/random-text-site/pages/index.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport getRandomPhrase from '../random-text/src/get-random-text';\nimport { getRandomWords, getRandomNumber } from '../random-text/src/utils';\nimport * as STOCK_PHRASES from '../random-text/text/phrases.json';\nconsole.log(STOCK_PHRASES);\nvar NUMBER_OF_PHRASES = 3;\nvar STARTER_PHRASE = 'get random text';\n\nvar getRandomPhrases =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(randomWords) {\n    var phrases, i, phrase;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            phrases = [];\n            i = 0;\n\n          case 2:\n            if (!(i < NUMBER_OF_PHRASES)) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.prev = 3;\n            _context.next = 6;\n            return getRandomPhrase(randomWords);\n\n          case 6:\n            phrase = _context.sent;\n            phrases.push(phrase);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0);\n\n          case 13:\n            i += 1;\n            _context.next = 2;\n            break;\n\n          case 16:\n            return _context.abrupt(\"return\", phrases);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 10]]);\n  }));\n\n  return function getRandomPhrases(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getRandomPhrasesDebounced = AwesomeDebouncePromise(getRandomPhrases, 500);\n\nvar getPhrase = function getPhrase(phrases, phrase) {\n  if (phrase !== phrases[0]) return phrases[0];\n  var randomIndex = getRandomNumber(0, STOCK_PHRASES.length - 1);\n  return STOCK_PHRASES[randomIndex];\n};\n\nvar RandomText = function RandomText(_ref2) {\n  var randomWords = _ref2.randomWords;\n\n  var _useState = useState([STARTER_PHRASE]),\n      phrases = _useState[0],\n      setPhrases = _useState[1];\n\n  var _useState2 = useState(STARTER_PHRASE),\n      phrase = _useState2[0],\n      setPhrase = _useState2[1];\n\n  var handleClick = function handleClick() {\n    console.log('phrases', phrases);\n    var newPhrase = getPhrase(phrases, phrase);\n    setPhrase(newPhrase);\n    var newPhrases = phrases && phrases.slice(1) || [];\n\n    if (newPhrases.length <= 1) {\n      getRandomPhrasesDebounced(randomWords).then(function (randomPhrases) {\n        setPhrases(newPhrases.concat(randomPhrases));\n      });\n    } else {\n      newPhrases = phrases.slice(1);\n      setPhrases(newPhrases);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-1924471468\" + \" \" + \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    onClick: handleClick,\n    className: \"jsx-1924471468\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, phrase), __jsx(_JSXStyle, {\n    id: \"1924471468\",\n    __self: this\n  }, \"@import url('https://fonts.googleapis.com/css?family=Fira+Code&display=swap');body{background:#000;}.container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;height:100vh;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}h1{color:rgb(255,235,238);cursor:pointer;font:32px 'fira code',menlo,helvetica,arial,sans-serif;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXNvbm92ZXJieS9wL3JhbmRvbS10ZXh0LXNpdGUvcGFnZXMvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9EUyxBQUV3RixBQUUzRCxBQUlILEFBT1ksZ0JBVjNCLE9BV2lCLGVBQzRDLG9DQVI5QyxhQUNVLE1BUXpCLDZGQVBxQiw2RkFDckIiLCJmaWxlIjoiL1VzZXJzL2phc29ub3ZlcmJ5L3AvcmFuZG9tLXRleHQtc2l0ZS9wYWdlcy9pbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBBd2Vzb21lRGVib3VuY2VQcm9taXNlIGZyb20gJ2F3ZXNvbWUtZGVib3VuY2UtcHJvbWlzZSc7XG5pbXBvcnQgZ2V0UmFuZG9tUGhyYXNlIGZyb20gJy4uL3JhbmRvbS10ZXh0L3NyYy9nZXQtcmFuZG9tLXRleHQnO1xuaW1wb3J0IHsgZ2V0UmFuZG9tV29yZHMsIGdldFJhbmRvbU51bWJlciB9IGZyb20gJy4uL3JhbmRvbS10ZXh0L3NyYy91dGlscyc7XG5pbXBvcnQgKiBhcyBTVE9DS19QSFJBU0VTIGZyb20gJy4uL3JhbmRvbS10ZXh0L3RleHQvcGhyYXNlcy5qc29uJztcblxuY29uc29sZS5sb2coU1RPQ0tfUEhSQVNFUyk7XG5jb25zdCBOVU1CRVJfT0ZfUEhSQVNFUyA9IDM7XG5jb25zdCBTVEFSVEVSX1BIUkFTRSA9ICdnZXQgcmFuZG9tIHRleHQnO1xuXG5jb25zdCBnZXRSYW5kb21QaHJhc2VzID0gYXN5bmMgKHJhbmRvbVdvcmRzOiBzdHJpbmdbXSkgPT4ge1xuICBjb25zdCBwaHJhc2VzID0gW107XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgTlVNQkVSX09GX1BIUkFTRVM7IGkgKz0gMSkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBwaHJhc2UgPSBhd2FpdCBnZXRSYW5kb21QaHJhc2UocmFuZG9tV29yZHMpO1xuICAgICAgcGhyYXNlcy5wdXNoKHBocmFzZSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcGhyYXNlcztcbn07XG5jb25zdCBnZXRSYW5kb21QaHJhc2VzRGVib3VuY2VkID0gQXdlc29tZURlYm91bmNlUHJvbWlzZShnZXRSYW5kb21QaHJhc2VzLCA1MDApO1xuY29uc3QgZ2V0UGhyYXNlID0gKHBocmFzZXM6IHN0cmluZ1tdLCBwaHJhc2U6IHN0cmluZykgPT4ge1xuICBpZiAocGhyYXNlICE9PSBwaHJhc2VzWzBdKSByZXR1cm4gcGhyYXNlc1swXTtcbiAgY29uc3QgcmFuZG9tSW5kZXggPSBnZXRSYW5kb21OdW1iZXIoMCwgU1RPQ0tfUEhSQVNFUy5sZW5ndGggLSAxKTtcbiAgcmV0dXJuIFNUT0NLX1BIUkFTRVNbcmFuZG9tSW5kZXhdO1xufTtcblxuY29uc3QgUmFuZG9tVGV4dCA9ICh7IHJhbmRvbVdvcmRzIH06IHsgcmFuZG9tV29yZHM6IHN0cmluZ1tdIH0pID0+IHtcbiAgY29uc3QgW3BocmFzZXMsIHNldFBocmFzZXNdID0gdXNlU3RhdGUoW1NUQVJURVJfUEhSQVNFXSk7XG4gIGNvbnN0IFtwaHJhc2UsIHNldFBocmFzZV0gPSB1c2VTdGF0ZShTVEFSVEVSX1BIUkFTRSk7XG5cbiAgY29uc3QgaGFuZGxlQ2xpY2sgPSAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ3BocmFzZXMnLCBwaHJhc2VzKTtcbiAgICBjb25zdCBuZXdQaHJhc2UgPSBnZXRQaHJhc2UocGhyYXNlcywgcGhyYXNlKTtcbiAgICBzZXRQaHJhc2UobmV3UGhyYXNlKTtcbiAgICBsZXQgbmV3UGhyYXNlcyA9IChwaHJhc2VzICYmIHBocmFzZXMuc2xpY2UoMSkpIHx8IFtdO1xuICAgIGlmIChuZXdQaHJhc2VzLmxlbmd0aCA8PSAxKSB7XG4gICAgICBnZXRSYW5kb21QaHJhc2VzRGVib3VuY2VkKHJhbmRvbVdvcmRzKS50aGVuKChyYW5kb21QaHJhc2VzKSA9PiB7XG4gICAgICAgIHNldFBocmFzZXMobmV3UGhyYXNlcy5jb25jYXQocmFuZG9tUGhyYXNlcykpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG5ld1BocmFzZXMgPSBwaHJhc2VzLnNsaWNlKDEpO1xuICAgICAgc2V0UGhyYXNlcyhuZXdQaHJhc2VzKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgPGgxIG9uQ2xpY2s9e2hhbmRsZUNsaWNrfT57cGhyYXNlfTwvaDE+XG4gICAgICA8c3R5bGUganN4IGdsb2JhbD5cbiAgICAgICAge2BcbiAgICAgICAgICBAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUZpcmErQ29kZSZkaXNwbGF5PXN3YXAnKTtcbiAgICAgICAgICBib2R5IHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICMwMDA7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLmNvbnRhaW5lciB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDB2aDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBoMSB7XG4gICAgICAgICAgICBjb2xvcjogcmdiKDI1NSwgMjM1LCAyMzgpO1xuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgZm9udDogMzJweCAnZmlyYSBjb2RlJywgbWVubG8sIGhlbHZldGljYSwgYXJpYWwsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgfVxuICAgICAgICBgfVxuICAgICAgPC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmNvbnN0IGdldEluaXRpYWxQcm9wcyA9IGFzeW5jICgpID0+IHtcbiAgY29uc3QgcmFuZG9tV29yZHMgPSBhd2FpdCBnZXRSYW5kb21Xb3JkcygpO1xuICByZXR1cm4geyByYW5kb21Xb3JkcyB9O1xufTtcblJhbmRvbVRleHQuZ2V0SW5pdGlhbFByb3BzID0gZ2V0SW5pdGlhbFByb3BzO1xuXG5leHBvcnQgZGVmYXVsdCBSYW5kb21UZXh0O1xuIl19 */\\n/*@ sourceURL=/Users/jasonoverby/p/random-text-site/pages/index.tsx */\"));\n};\n\nvar getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var randomWords;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return getRandomWords();\n\n          case 2:\n            randomWords = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              randomWords: randomWords\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getInitialProps() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nRandomText.getInitialProps = getInitialProps;\nexport default RandomText;","map":{"version":3,"sources":["/Users/jasonoverby/p/random-text-site/pages/index.tsx"],"names":["useState","AwesomeDebouncePromise","getRandomPhrase","getRandomWords","getRandomNumber","STOCK_PHRASES","console","log","NUMBER_OF_PHRASES","STARTER_PHRASE","getRandomPhrases","randomWords","phrases","i","phrase","push","getRandomPhrasesDebounced","getPhrase","randomIndex","length","RandomText","setPhrases","setPhrase","handleClick","newPhrase","newPhrases","slice","then","randomPhrases","concat","getInitialProps"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,0BAAhD;AACA,OAAO,KAAKC,aAAZ,MAA+B,kCAA/B;AAEAC,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACA,IAAMG,iBAAiB,GAAG,CAA1B;AACA,IAAMC,cAAc,GAAG,iBAAvB;;AAEA,IAAMC,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,YAAAA,OADiB,GACP,EADO;AAEdC,YAAAA,CAFc,GAEV,CAFU;;AAAA;AAAA,kBAEPA,CAAC,GAAGL,iBAFG;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAIEN,eAAe,CAACS,WAAD,CAJjB;;AAAA;AAIbG,YAAAA,MAJa;AAKnBF,YAAAA,OAAO,CAACG,IAAR,CAAaD,MAAb;AALmB;AAAA;;AAAA;AAAA;AAAA;AAOnBR,YAAAA,OAAO,CAACC,GAAR;;AAPmB;AAEgBM,YAAAA,CAAC,IAAI,CAFrB;AAAA;AAAA;;AAAA;AAAA,6CAUhBD,OAVgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBF,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;AAYA,IAAMM,yBAAyB,GAAGf,sBAAsB,CAACS,gBAAD,EAAmB,GAAnB,CAAxD;;AACA,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAACL,OAAD,EAAoBE,MAApB,EAAuC;AACvD,MAAIA,MAAM,KAAKF,OAAO,CAAC,CAAD,CAAtB,EAA2B,OAAOA,OAAO,CAAC,CAAD,CAAd;AAC3B,MAAMM,WAAW,GAAGd,eAAe,CAAC,CAAD,EAAIC,aAAa,CAACc,MAAd,GAAuB,CAA3B,CAAnC;AACA,SAAOd,aAAa,CAACa,WAAD,CAApB;AACD,CAJD;;AAMA,IAAME,UAAU,GAAG,SAAbA,UAAa,QAAgD;AAAA,MAA7CT,WAA6C,SAA7CA,WAA6C;;AAAA,kBACnCX,QAAQ,CAAC,CAACS,cAAD,CAAD,CAD2B;AAAA,MAC1DG,OAD0D;AAAA,MACjDS,UADiD;;AAAA,mBAErCrB,QAAQ,CAACS,cAAD,CAF6B;AAAA,MAE1DK,MAF0D;AAAA,MAElDQ,SAFkD;;AAIjE,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBjB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,OAAvB;AACA,QAAMY,SAAS,GAAGP,SAAS,CAACL,OAAD,EAAUE,MAAV,CAA3B;AACAQ,IAAAA,SAAS,CAACE,SAAD,CAAT;AACA,QAAIC,UAAU,GAAIb,OAAO,IAAIA,OAAO,CAACc,KAAR,CAAc,CAAd,CAAZ,IAAiC,EAAlD;;AACA,QAAID,UAAU,CAACN,MAAX,IAAqB,CAAzB,EAA4B;AAC1BH,MAAAA,yBAAyB,CAACL,WAAD,CAAzB,CAAuCgB,IAAvC,CAA4C,UAACC,aAAD,EAAmB;AAC7DP,QAAAA,UAAU,CAACI,UAAU,CAACI,MAAX,CAAkBD,aAAlB,CAAD,CAAV;AACD,OAFD;AAGD,KAJD,MAIO;AACLH,MAAAA,UAAU,GAAGb,OAAO,CAACc,KAAR,CAAc,CAAd,CAAb;AACAL,MAAAA,UAAU,CAACI,UAAD,CAAV;AACD;AACF,GAbD;;AAeA,SACE;AAAA,wCAAe,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,OAAO,EAAEF,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BT,MAA3B,CADF;AAAA;AAAA;AAAA,80IADF;AA0BD,CA7CD;;AA+CA,IAAMgB,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI3B,cAAc,EADlB;;AAAA;AAChBQ,YAAAA,WADgB;AAAA,8CAEf;AAAEA,cAAAA,WAAW,EAAXA;AAAF,aAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfmB,eAAe;AAAA;AAAA;AAAA,GAArB;;AAIAV,UAAU,CAACU,eAAX,GAA6BA,eAA7B;AAEA,eAAeV,UAAf","sourcesContent":["import { useState } from 'react';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport getRandomPhrase from '../random-text/src/get-random-text';\nimport { getRandomWords, getRandomNumber } from '../random-text/src/utils';\nimport * as STOCK_PHRASES from '../random-text/text/phrases.json';\n\nconsole.log(STOCK_PHRASES);\nconst NUMBER_OF_PHRASES = 3;\nconst STARTER_PHRASE = 'get random text';\n\nconst getRandomPhrases = async (randomWords: string[]) => {\n  const phrases = [];\n  for (let i = 0; i < NUMBER_OF_PHRASES; i += 1) {\n    try {\n      const phrase = await getRandomPhrase(randomWords);\n      phrases.push(phrase);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  return phrases;\n};\nconst getRandomPhrasesDebounced = AwesomeDebouncePromise(getRandomPhrases, 500);\nconst getPhrase = (phrases: string[], phrase: string) => {\n  if (phrase !== phrases[0]) return phrases[0];\n  const randomIndex = getRandomNumber(0, STOCK_PHRASES.length - 1);\n  return STOCK_PHRASES[randomIndex];\n};\n\nconst RandomText = ({ randomWords }: { randomWords: string[] }) => {\n  const [phrases, setPhrases] = useState([STARTER_PHRASE]);\n  const [phrase, setPhrase] = useState(STARTER_PHRASE);\n\n  const handleClick = () => {\n    console.log('phrases', phrases);\n    const newPhrase = getPhrase(phrases, phrase);\n    setPhrase(newPhrase);\n    let newPhrases = (phrases && phrases.slice(1)) || [];\n    if (newPhrases.length <= 1) {\n      getRandomPhrasesDebounced(randomWords).then((randomPhrases) => {\n        setPhrases(newPhrases.concat(randomPhrases));\n      });\n    } else {\n      newPhrases = phrases.slice(1);\n      setPhrases(newPhrases);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 onClick={handleClick}>{phrase}</h1>\n      <style jsx global>\n        {`\n          @import url('https://fonts.googleapis.com/css?family=Fira+Code&display=swap');\n          body {\n            background: #000;\n          }\n\n          .container {\n            display: flex;\n            height: 100vh;\n            justify-content: center;\n            align-items: center;\n          }\n\n          h1 {\n            color: rgb(255, 235, 238);\n            cursor: pointer;\n            font: 32px 'fira code', menlo, helvetica, arial, sans-serif;\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nconst getInitialProps = async () => {\n  const randomWords = await getRandomWords();\n  return { randomWords };\n};\nRandomText.getInitialProps = getInitialProps;\n\nexport default RandomText;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar NUMBER_OF_WORDS_TO_FETCH = 100;\n\nvar isShiftable = function isShiftable(arr) {\n  return arr.length > 0;\n};\n\nvar multilineStrToArrayOfWords = function multilineStrToArrayOfWords(str) {\n  return str.split(' ').filter(function (_char) {\n    return _char !== '';\n  });\n};\n\nvar getRandomNumber = function getRandomNumber(val1, val2) {\n  var min = Math.min(val1, val2);\n  var max = Math.max(val1, val2);\n  if (min === max) return min;\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nvar removeNonAlphaChars = function removeNonAlphaChars(arr) {\n  return arr.filter(function (word) {\n    return /^[a-z]+$/i.test(word);\n  });\n};\n\nvar shuffleArr = function shuffleArr(arr) {\n  var currentIndex = arr.length;\n  var temporaryValue;\n  var randomIndex; // While there remain elements to shuffle...\n\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1; // And swap it with the current element.\n\n    temporaryValue = arr[currentIndex];\n    arr[currentIndex] = arr[randomIndex];\n    arr[randomIndex] = temporaryValue;\n  }\n\n  return arr;\n};\n\nvar getRandomWords =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var wordsApiKeyRes, wordsApiKey, wordsApiRes;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://random-word-api.herokuapp.com/key?');\n\n          case 2:\n            wordsApiKeyRes = _context.sent;\n            _context.next = 5;\n            return wordsApiKeyRes.text();\n\n          case 5:\n            wordsApiKey = _context.sent;\n            _context.next = 8;\n            return fetch(\"https://random-word-api.herokuapp.com/word?key=\".concat(wordsApiKey, \"&number=\").concat(NUMBER_OF_WORDS_TO_FETCH));\n\n          case 8:\n            wordsApiRes = _context.sent;\n            return _context.abrupt(\"return\", wordsApiRes.json());\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getRandomWords() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport { isShiftable, multilineStrToArrayOfWords, getRandomNumber, getRandomWords, removeNonAlphaChars, shuffleArr };","map":{"version":3,"sources":["/Users/jasonoverby/p/random-text-site/random-text/src/utils.ts"],"names":["NUMBER_OF_WORDS_TO_FETCH","isShiftable","arr","length","multilineStrToArrayOfWords","str","split","filter","char","getRandomNumber","val1","val2","min","Math","max","floor","random","removeNonAlphaChars","word","test","shuffleArr","currentIndex","temporaryValue","randomIndex","getRandomWords","fetch","wordsApiKeyRes","text","wordsApiKey","wordsApiRes","json"],"mappings":";;AAAA,IAAMA,wBAAwB,GAAG,GAAjC;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAIC,GAAJ;AAAA,SAClBA,GAAG,CAACC,MAAJ,GAAa,CADK;AAAA,CAApB;;AAEA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,GAAD;AAAA,SACjCA,GAAG,CAACC,KAAJ,CAAU,GAAV,EAAeC,MAAf,CAAsB,UAACC,KAAD;AAAA,WAAUA,KAAI,KAAK,EAAnB;AAAA,GAAtB,CADiC;AAAA,CAAnC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAeC,IAAf,EAAgC;AACtD,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,CAASF,IAAT,EAAeC,IAAf,CAAZ;AACA,MAAMG,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASJ,IAAT,EAAeC,IAAf,CAAZ;AACA,MAAIC,GAAG,KAAKE,GAAZ,EAAiB,OAAOF,GAAP;AACjB,SAAOC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBF,GAAG,GAAGF,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACD,CALD;;AAMA,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACf,GAAD;AAAA,SAC1BA,GAAG,CAACK,MAAJ,CAAW,UAACW,IAAD;AAAA,WAAU,YAAYC,IAAZ,CAAiBD,IAAjB,CAAV;AAAA,GAAX,CAD0B;AAAA,CAA5B;;AAEA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAAClB,GAAD,EAAgB;AACjC,MAAImB,YAAY,GAAGnB,GAAG,CAACC,MAAvB;AACA,MAAImB,cAAJ;AACA,MAAIC,WAAJ,CAHiC,CAKjC;;AACA,SAAOF,YAAY,KAAK,CAAxB,EAA2B;AACzB;AACAE,IAAAA,WAAW,GAAGV,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,KAAgBK,YAA3B,CAAd;AACAA,IAAAA,YAAY,IAAI,CAAhB,CAHyB,CAKzB;;AACAC,IAAAA,cAAc,GAAGpB,GAAG,CAACmB,YAAD,CAApB;AACAnB,IAAAA,GAAG,CAACmB,YAAD,CAAH,GAAoBnB,GAAG,CAACqB,WAAD,CAAvB;AACArB,IAAAA,GAAG,CAACqB,WAAD,CAAH,GAAmBD,cAAnB;AACD;;AAED,SAAOpB,GAAP;AACD,CAlBD;;AAmBA,IAAMsB,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQC,KAAK,CAChC,4CADgC,CADb;;AAAA;AACfC,YAAAA,cADe;AAAA;AAAA,mBAIKA,cAAc,CAACC,IAAf,EAJL;;AAAA;AAIfC,YAAAA,WAJe;AAAA;AAAA,mBAKKH,KAAK,0DACqBG,WADrB,qBAC2C5B,wBAD3C,EALV;;AAAA;AAKf6B,YAAAA,WALe;AAAA,6CAQdA,WAAW,CAACC,IAAZ,EARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdN,cAAc;AAAA;AAAA;AAAA,GAApB;;AAWA,SACEvB,WADF,EAEEG,0BAFF,EAGEK,eAHF,EAIEe,cAJF,EAKEP,mBALF,EAMEG,UANF","sourcesContent":["const NUMBER_OF_WORDS_TO_FETCH = 100;\nconst isShiftable = <T>(arr: T[]): arr is { shift(): T } & Array<T> =>\n  arr.length > 0;\nconst multilineStrToArrayOfWords = (str: string) =>\n  str.split(' ').filter((char) => char !== '');\nconst getRandomNumber = (val1: number, val2: number) => {\n  const min = Math.min(val1, val2);\n  const max = Math.max(val1, val2);\n  if (min === max) return min;\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst removeNonAlphaChars = (arr: string[]) =>\n  arr.filter((word) => /^[a-z]+$/i.test(word));\nconst shuffleArr = (arr: any[]) => {\n  let currentIndex = arr.length;\n  let temporaryValue;\n  let randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = arr[currentIndex];\n    arr[currentIndex] = arr[randomIndex];\n    arr[randomIndex] = temporaryValue;\n  }\n\n  return arr;\n};\nconst getRandomWords = async () => {\n  const wordsApiKeyRes = await fetch(\n    'https://random-word-api.herokuapp.com/key?',\n  );\n  const wordsApiKey = await wordsApiKeyRes.text();\n  const wordsApiRes = await fetch(\n    `https://random-word-api.herokuapp.com/word?key=${wordsApiKey}&number=${NUMBER_OF_WORDS_TO_FETCH}`,\n  );\n  return wordsApiRes.json();\n};\n\nexport {\n  isShiftable,\n  multilineStrToArrayOfWords,\n  getRandomNumber,\n  getRandomWords,\n  removeNonAlphaChars,\n  shuffleArr,\n};\n"]},"metadata":{},"sourceType":"module"}
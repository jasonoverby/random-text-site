{"version":3,"file":"static/webpack/static/development/pages/index.js.627bd96bd7ddaaad9113.hot-update.js","sources":["webpack:///./random-text/src/get-random-text.ts"],"sourcesContent":["import getSpecialsWord from './specials';\nimport getWord from './get-word';\nimport { getPOS } from './pos';\nimport { isShiftable } from './utils';\n\ntype MuseApiPartsOfSpeech = 'adj' | 'adv' | 'v' | 'n' | 'prop';\ntype Pos =\n  | MuseApiPartsOfSpeech\n  | 'determiners'\n  | 'conjunctions'\n  | 'prepositions';\n\nconst DEFAULT_NUMBER_OF_LETTERS = 200;\nconst WIGGLE_ROOM = 3;\n\nconst getRandomPhrase = async (randomWords: string[]) => {\n  const numberOfLetters = DEFAULT_NUMBER_OF_LETTERS;\n  const partsOfSpeech: Pos[] = ['v', 'adj', 'n'];\n\n  const specialsWord = await getSpecialsWord();\n  let specialsWordPOS: string[] = await getPOS(specialsWord);\n  let str = '';\n\n  while (\n    isShiftable(partsOfSpeech) &&\n    str.length + WIGGLE_ROOM < numberOfLetters\n  ) {\n    const pos = partsOfSpeech.shift();\n    let word = '';\n\n    if (specialsWordPOS.includes(pos)) {\n      word = specialsWord;\n      specialsWordPOS = [];\n    } else {\n      word = await getWord(pos, randomWords);\n      const indexOfWord = randomWords.indexOf(word);\n      randomWords.splice(indexOfWord, 1);\n    }\n\n    if (`${str} ${word}`.length < numberOfLetters) {\n      str += ` ${word}`;\n    }\n  }\n\n  return str.trim();\n};\n\nexport default getRandomPhrase;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AACA;AADA;AAKA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AAdA;AAAA;AAAA;AAAA;AACA;AAeA;AACA;AAjBA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAmBA;AACA;AACA;AACA;AAtBA;AAwBA;AACA;AACA;AACA;AA3BA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA+BA;;;;A","sourceRoot":""}